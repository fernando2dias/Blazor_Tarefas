<h1>@Titulo</h1>


    <table class="table">
        <thead>
            <tr>
                <th>Ação</th>
                <th>Data</th>
                <th>Descrição</th>
                <th>Concluída</th>
            </tr>
        </thead>
        <tbody>
            <ListaGenerica ListaItem="tarefas">
                <Lista Context="tarefa">
                    <TarefaIndividual item="tarefa" RemoverTarefa="RemoveTarefa">

                    </TarefaIndividual>
                </Lista>
            </ListaGenerica>
        </tbody>
    </table>

    <DialogConfirm @ref="confirmacao" onCancela="CancelaConfirmacao" onConfirma="RemoverTarefaConfirmacao"> 
        <div> Deseja Excluir esta tarefa?</div>

    </DialogConfirm>


@if (tarefas != null)
{
    <div class="form-group">
        <label>Tarefa</label>
        <input type="Text" placeholder="Informe a tarefa" @bind="novaTarefa" />
        <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Registrar Tarefa</button>
    </div>
}

@code {
    [Parameter] public List<Tarefa> tarefas { get; set; }
    [Parameter] public string Titulo { get; set; }

    private string novaTarefa = "";

    DialogConfirm confirmacao;

    Tarefa tarefaRemover;


    private void AdicionarNovaTarefa()
    {
        if (!string.IsNullOrWhiteSpace(novaTarefa))
        {
            tarefas.Add(new Tarefa
            {
                Id = Guid.NewGuid(),
                Description = novaTarefa,
                CreatedAt = DateTime.Now
            });
            novaTarefa = "";
        }
    }

    private void RemoveTarefa(Tarefa tarefa)
    {
        confirmacao.Exibir();
        tarefaRemover = tarefa;
        //  tarefas.Remove(tarefas.First(x => x.Id == tarefa.Id));
    }


    void RemoverTarefaConfirmacao()
    {
        tarefas.Remove(tarefaRemover);
        tarefaRemover = null;
        confirmacao.Ocultar();
    }

    void CancelaConfirmacao()
    {
        confirmacao.Ocultar();
        tarefaRemover = null;
    }

}